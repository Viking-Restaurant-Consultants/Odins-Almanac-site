services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=8080
      - APP_BASE_URL=${APP_BASE_URL:-http://localhost:8080}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_STARTER_PRICE_ID=${STRIPE_STARTER_PRICE_ID}
      - STRIPE_PRO_PRICE_ID=${STRIPE_PRO_PRICE_ID}
      - STRIPE_PLATINUM_PRICE_ID=${STRIPE_PLATINUM_PRICE_ID}
      - STRIPE_ENTERPRISE_PRICE_ID=${STRIPE_ENTERPRISE_PRICE_ID}
    volumes:
      - ./server:/app
      - /app/node_modules
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/healthz', (r) => { process.exit(r.statusCode === 200 ? 0 : 1); })"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Optional: client service (uncomment if you have a separate React/Vue app)
  # client:
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:80"
  #   depends_on:
  #     - server
  #   restart: unless-stopped

networks:
  default:
    name: odins-almanac-network
